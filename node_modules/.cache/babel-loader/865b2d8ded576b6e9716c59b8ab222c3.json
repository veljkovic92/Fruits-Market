{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./CartForm.module.css\";\nimport Notification from \"../../UI/Notification\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartForm = () => {\n  _s();\n\n  const notification = useSelector(state => state.ui.notification);\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [enteredRepeatPassword, setEnteredRepeatPassword] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\n  const [enteredRepeatPasswordTouched, setEnteredRepeatPasswordTouched] = useState(false);\n\n  const enteredNameHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const enteredNameBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const enteredLastNameHandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const enteredLastNameBlurHandler = () => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const enteredPasswordHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const enteredPasswordBlurHandler = () => {\n    setEnteredPasswordTouched(true);\n  };\n\n  const enteredRepeatPasswordHandler = event => {\n    setEnteredRepeatPassword(event.target.value);\n  };\n\n  const enteredRepeatPasswordBlurHandler = () => {\n    setEnteredRepeatPasswordTouched(true);\n  };\n\n  const isNotEmpty = value => value.trim().length > 0;\n\n  const isMoreThanSixChars = value => value.trim().length > 6;\n\n  const enteredNameIsValid = isNotEmpty(enteredName);\n  const enteredLastNameIsValid = isNotEmpty(enteredLastName);\n  const enteredPasswordIsValid = isMoreThanSixChars(enteredPassword);\n  const enteredRepeatPasswordIsValid = isMoreThanSixChars(enteredRepeatPassword);\n  const bothPasswordsAreEqual = enteredPassword === enteredRepeatPassword;\n  const passwordsNotValid = !bothPasswordsAreEqual && enteredPasswordTouched && enteredRepeatPasswordTouched && enteredPasswordIsValid && enteredRepeatPasswordIsValid;\n  const formIsValid = enteredNameIsValid && enteredLastNameIsValid && enteredPasswordIsValid && bothPasswordsAreEqual;\n  const nameErrorClass = !enteredNameIsValid && enteredNameTouched ? classes[\"invalid\"] : undefined;\n  const lastNameErrorClass = !enteredLastNameIsValid && enteredLastNameTouched ? classes[\"invalid\"] : undefined;\n  const passwordErrorClass = !enteredPasswordIsValid && enteredPasswordTouched ? classes[\"invalid\"] : undefined;\n  const repeatPasswordErrorClass = !enteredRepeatPasswordIsValid && enteredRepeatPasswordTouched ? classes[\"invalid\"] : undefined;\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    console.log(\"Cart is submitted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CartForm, \"JVDVNSaWCfg9W5nr7vIYN//DirM=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartForm;\nexport default CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"names":["useEffect","useState","useSelector","classes","Notification","CartForm","notification","state","ui","enteredName","setEnteredName","enteredLastName","setEnteredLastName","enteredPassword","setEnteredPassword","enteredRepeatPassword","setEnteredRepeatPassword","enteredNameTouched","setEnteredNameTouched","enteredLastNameTouched","setEnteredLastNameTouched","enteredPasswordTouched","setEnteredPasswordTouched","enteredRepeatPasswordTouched","setEnteredRepeatPasswordTouched","enteredNameHandler","event","target","value","enteredNameBlurHandler","enteredLastNameHandler","enteredLastNameBlurHandler","enteredPasswordHandler","enteredPasswordBlurHandler","enteredRepeatPasswordHandler","enteredRepeatPasswordBlurHandler","isNotEmpty","trim","length","isMoreThanSixChars","enteredNameIsValid","enteredLastNameIsValid","enteredPasswordIsValid","enteredRepeatPasswordIsValid","bothPasswordsAreEqual","passwordsNotValid","formIsValid","nameErrorClass","undefined","lastNameErrorClass","passwordErrorClass","repeatPasswordErrorClass","formSubmitHandler","preventDefault","console","log"],"sources":["E:/Downloads/01-starting-project (7)/Fruits Bazar/src/components/Cart/Cart-form/CartForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport classes from \"./CartForm.module.css\";\r\nimport Notification from \"../../UI/Notification\";\r\n\r\nconst CartForm = () => {\r\n  const notification = useSelector(state => state.ui.notification)\r\n\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredRepeatPassword, setEnteredRepeatPassword] = useState(\"\");\r\n\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n  const [enteredRepeatPasswordTouched, setEnteredRepeatPasswordTouched] =\r\n    useState(false);\r\n\r\n  const enteredNameHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const enteredNameBlurHandler = () => {\r\n    setEnteredNameTouched(true);\r\n  };\r\n\r\n  const enteredLastNameHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n  };\r\n\r\n  const enteredLastNameBlurHandler = () => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n\r\n  const enteredPasswordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const enteredPasswordBlurHandler = () => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const enteredRepeatPasswordHandler = (event) => {\r\n    setEnteredRepeatPassword(event.target.value);\r\n  };\r\n\r\n  const enteredRepeatPasswordBlurHandler = () => {\r\n    setEnteredRepeatPasswordTouched(true);\r\n  };\r\n\r\n  const isNotEmpty = (value) => value.trim().length > 0;\r\n  const isMoreThanSixChars = (value) => value.trim().length > 6;\r\n\r\n  const enteredNameIsValid = isNotEmpty(enteredName);\r\n\r\n  const enteredLastNameIsValid = isNotEmpty(enteredLastName);\r\n\r\n  const enteredPasswordIsValid = isMoreThanSixChars(enteredPassword);\r\n\r\n  const enteredRepeatPasswordIsValid = isMoreThanSixChars(\r\n    enteredRepeatPassword\r\n  );\r\n\r\n  const bothPasswordsAreEqual = enteredPassword === enteredRepeatPassword;\r\n\r\n  const passwordsNotValid =\r\n    !bothPasswordsAreEqual &&\r\n    enteredPasswordTouched &&\r\n    enteredRepeatPasswordTouched &&\r\n    enteredPasswordIsValid &&\r\n    enteredRepeatPasswordIsValid;\r\n\r\n  const formIsValid =\r\n    enteredNameIsValid &&\r\n    enteredLastNameIsValid &&\r\n    enteredPasswordIsValid &&\r\n    bothPasswordsAreEqual;\r\n\r\n  const nameErrorClass =\r\n    !enteredNameIsValid && enteredNameTouched ? classes[\"invalid\"] : undefined;\r\n  const lastNameErrorClass =\r\n    !enteredLastNameIsValid && enteredLastNameTouched\r\n      ? classes[\"invalid\"]\r\n      : undefined;\r\n  const passwordErrorClass =\r\n    !enteredPasswordIsValid && enteredPasswordTouched\r\n      ? classes[\"invalid\"]\r\n      : undefined;\r\n  const repeatPasswordErrorClass =\r\n    !enteredRepeatPasswordIsValid && enteredRepeatPasswordTouched\r\n      ? classes[\"invalid\"]\r\n      : undefined;\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Cart is submitted\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default CartForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}