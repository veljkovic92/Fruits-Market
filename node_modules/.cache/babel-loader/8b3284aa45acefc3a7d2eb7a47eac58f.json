{"ast":null,"code":"var _jsxFileName = \"E:\\\\Downloads\\\\01-starting-project (7)\\\\React Redux Advanced\\\\src\\\\components\\\\Cart\\\\Cart-form\\\\CartForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport classes from \"./CartForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartForm = () => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [enteredRepeatPassword, setEnteredRepeatPassword] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\n  const [passwordsSame, setEnteredPasswordsSame] = useState(false);\n\n  const enteredNameHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const enteredNameBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const enteredLastNameHandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const enteredLastNameBlurHandler = () => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const enteredPasswordHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const enteredPasswordBlurHandler = () => {\n    setEnteredPasswordTouched(true);\n  };\n\n  const enteredRepeatPasswordHandler = event => {\n    setEnteredRepeatPassword(event.target.value);\n  };\n\n  if (enteredPassword === enteredRepeatPassword) {\n    setEnteredPasswordsSame(true);\n  } // const isEmpty = (input) => input.trim().length !== 0;\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    console.log(\"Cart is submitted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    className: classes[\"cart-form\"],\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartForm, \"sBrkYfySNE9cT0P37bBb8auOSf4=\");\n\n_c = CartForm;\nexport default CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"names":["useState","classes","CartForm","enteredName","setEnteredName","enteredLastName","setEnteredLastName","enteredPassword","setEnteredPassword","enteredRepeatPassword","setEnteredRepeatPassword","enteredNameTouched","setEnteredNameTouched","enteredLastNameTouched","setEnteredLastNameTouched","enteredPasswordTouched","setEnteredPasswordTouched","passwordsSame","setEnteredPasswordsSame","enteredNameHandler","event","target","value","enteredNameBlurHandler","enteredLastNameHandler","enteredLastNameBlurHandler","enteredPasswordHandler","enteredPasswordBlurHandler","enteredRepeatPasswordHandler","formSubmitHandler","preventDefault","console","log"],"sources":["E:/Downloads/01-starting-project (7)/React Redux Advanced/src/components/Cart/Cart-form/CartForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport classes from \"./CartForm.module.css\";\r\n\r\nconst CartForm = () => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredRepeatPassword, setEnteredRepeatPassword] = useState(\"\");\r\n\r\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n\r\n  const [passwordsSame, setEnteredPasswordsSame] = useState(false);\r\n\r\n  const enteredNameHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const enteredNameBlurHandler = () => {\r\n    setEnteredNameTouched(true);\r\n  };\r\n\r\n  const enteredLastNameHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n  };\r\n\r\n  const enteredLastNameBlurHandler = () => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n\r\n  const enteredPasswordHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n  };\r\n\r\n  const enteredPasswordBlurHandler = () => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const enteredRepeatPasswordHandler = (event) => {\r\n    setEnteredRepeatPassword(event.target.value);\r\n  };\r\n\r\n  if (enteredPassword === enteredRepeatPassword) {\r\n    setEnteredPasswordsSame(true);\r\n  }\r\n\r\n  // const isEmpty = (input) => input.trim().length !== 0;\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Cart is submitted\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler} className={classes[\"cart-form\"]}>\r\n      {/* <div>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={enteredName}\r\n          onChange={enteredNameHandler}\r\n          onBlur={enteredNameBlurHandler}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Your Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          value={enteredLastName}\r\n          onChange={enteredLastNameHandler}\r\n          onBlur={enteredLastNameBlurHandler}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={enteredPassword}\r\n          onChange={enteredPasswordHandler}\r\n          onBlur={enteredPasswordBlurHandler}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Repeat Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={enteredRepeatPassword}\r\n          onChange={enteredRepeatPasswordHandler}\r\n          onBlur={enteredPasswordBlurHandler}\r\n        ></input>\r\n      </div> */}\r\n      <button>Complete</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CartForm;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACS,qBAAD,EAAwBC,wBAAxB,IAAoDV,QAAQ,CAAC,EAAD,CAAlE;EAEA,MAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACa,sBAAD,EAAyBC,yBAAzB,IAAsDd,QAAQ,CAAC,KAAD,CAApE;EACA,MAAM,CAACe,sBAAD,EAAyBC,yBAAzB,IAAsDhB,QAAQ,CAAC,KAAD,CAApE;EAEA,MAAM,CAACiB,aAAD,EAAgBC,uBAAhB,IAA2ClB,QAAQ,CAAC,KAAD,CAAzD;;EAEA,MAAMmB,kBAAkB,GAAIC,KAAD,IAAW;IACpChB,cAAc,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,sBAAsB,GAAG,MAAM;IACnCX,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAIA,MAAMY,sBAAsB,GAAIJ,KAAD,IAAW;IACxCd,kBAAkB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EACD,CAFD;;EAIA,MAAMG,0BAA0B,GAAG,MAAM;IACvCX,yBAAyB,CAAC,IAAD,CAAzB;EACD,CAFD;;EAIA,MAAMY,sBAAsB,GAAIN,KAAD,IAAW;IACxCZ,kBAAkB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EACD,CAFD;;EAIA,MAAMK,0BAA0B,GAAG,MAAM;IACvCX,yBAAyB,CAAC,IAAD,CAAzB;EACD,CAFD;;EAIA,MAAMY,4BAA4B,GAAIR,KAAD,IAAW;IAC9CV,wBAAwB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB;EACD,CAFD;;EAIA,IAAIf,eAAe,KAAKE,qBAAxB,EAA+C;IAC7CS,uBAAuB,CAAC,IAAD,CAAvB;EACD,CA1CoB,CA4CrB;;;EAEA,MAAMW,iBAAiB,GAAIT,KAAD,IAAW;IACnCA,KAAK,CAACU,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACD,CAHD;;EAKA,oBACE;IAAM,QAAQ,EAAEH,iBAAhB;IAAmC,SAAS,EAAE5B,OAAO,CAAC,WAAD,CAArD;IAAA,uBAyCE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAzCF;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD,CAhGD;;GAAMC,Q;;KAAAA,Q;AAkGN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}